@mixin should($bootcamp-should-a, $bootcamp-should-b) {
  @if $bootcamp-should-force-error {
    $bootcamp-should-b: false;
  }

  $bootcamp-number-of-assertions: $bootcamp-number-of-assertions + 1;

  $bootcamp-should-a-type: type-of($bootcamp-should-a-value);
  $bootcamp-should-b-type: type-of($bootcamp-should-b-value);

  @if $bootcamp-should-a-value == null {
    $bootcamp-should-a-value: "null";
  }

  @if $bootcamp-should-b-value == null {
    $bootcamp-should-b-value: "null";
  }

  @if $bootcamp-should-a-value == () {
    $bootcamp-should-a-value: "()";
  }

  @if $bootcamp-should-b-value == () {
    $bootcamp-should-b-value: "()";
  }

  @if not $bootcamp-should-b {
    $bootcamp-passing-assertions: false;
  }

  @if not $bootcamp-should-b or $bootcamp-setting-verbose {
    $_bootcamp-assertion-status: " ✗";

    @if $bootcamp-passing-assertions {
      $_bootcamp-assertion-status: " ✔";
    }

    @if $bootcamp-should-error {
      #{$_bootcamp-assertion-status}:
        #{$bootcamp-should-error}
        #{$bootcamp-should-a-text} #{$bootcamp-should-a-value} quote($bootcamp-should-a-type)
        #{$bootcamp-should-b-text} #{$bootcamp-should-b-value} quote($bootcamp-should-b-type);
    } @else {
      #{$_bootcamp-assertion-status}:
        #{$bootcamp-should-a-text} #{$bootcamp-should-a-value} quote($bootcamp-should-a-type)
        #{$bootcamp-should-b-text} #{$bootcamp-should-b-value} quote($bootcamp-should-b-type);
    }
  }

  @if $bootcamp-should-error {
    @if not index($bootcamp-errors, $bootcamp-should-error) {
      $bootcamp-errors: append($bootcamp-errors, $bootcamp-should-error);
    }
  }

  $bootcamp-should-a-text:       null;
  $bootcamp-should-b-text:       null;
  $bootcamp-should-a-value:      null;
  $bootcamp-should-b-value:      null;
  $bootcamp-should-error:        null;
  $bootcamp-should-force-error: false;
}
