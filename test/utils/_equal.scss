@include describe("Equal Util") {
  @include it("should return true for lists that are equal") {
    $list-1: 1, 2, 3;
    $list-2: "foo", "bar", "baz";
    $list-3: true, false, true;

    @include should(expect( bootcamp-util-equal( $list-1, $list-1 ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-2, $list-2 ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-3, $list-3 ) ), to( be( true )));
  }

  @include it("should return false for lists that are not equal") {
    $list-1a: 1, 2, 3;
    $list-1b: 3, 2, 1;

    $list-2a: "foo", "bar", "baz";
    $list-2b: "baz", "bar", "foo";

    $list-3a: true, false, true;
    $list-3b: false, true, false;

    @include should(expect( bootcamp-util-equal( $list-1a, $list-1b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-2a, $list-2b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-3a, $list-3b ) ), to( be( false )));
  }

  @include it("should return true for deep lists that are equal") {
    $list-1: 1, (2, 3);
    $list-2: "foo", ("bar", "baz");
    $list-3: true, (false, true);

    @include should(expect( bootcamp-util-equal( $list-1, $list-1 ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-2, $list-2 ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-3, $list-3 ) ), to( be( true )));
  }

  @include it("should return false for deep lists that are not equal") {
    $list-1a: 1, (2, 3);
    $list-1b: 1, (3, 2);

    $list-2a: "foo", ("bar", "baz");
    $list-2b: "foo", ("baz", "bar");

    $list-3a: true, (false, true);
    $list-3b: true, (true, false);

    @include should(expect( bootcamp-util-equal( $list-1a, $list-1b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-2a, $list-2b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-3a, $list-3b ) ), to( be( false )));
  }

  @include it("should return true for lists that are equal and have different list seperators") {
    $list-1a: 1 2 3;
    $list-1b: 1, 2, 3;
    $list-2a: "foo" "bar" "baz";
    $list-2b: "foo", "bar", "baz";
    $list-3a: true false true;
    $list-3b: true, false, true;

    @include should(expect( bootcamp-util-equal( $list-1a, $list-1b ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-2a, $list-2b ) ), to( be( true )));
    @include should(expect( bootcamp-util-equal( $list-3a, $list-3b ) ), to( be( true )));
  }

  @include it("should return false for lists that are not equal and have different list seperators") {
    $list-1a: 1 2 3;
    $list-1b: 3, 2, 1;

    $list-2a: "foo" "bar" "baz";
    $list-2b: "baz", "bar", "foo";

    $list-3a: true false true;
    $list-3b: false, true, false;

    @include should(expect( bootcamp-util-equal( $list-1a, $list-1b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-2a, $list-2b ) ), to( be( false )));
    @include should(expect( bootcamp-util-equal( $list-3a, $list-3b ) ), to( be( false )));
  }
}
